#!/bin/bash
# NEXTFLOW TASK: exportRObject
set -e
set -u
NXF_DEBUG=${NXF_DEBUG:=0}; [[ $NXF_DEBUG > 1 ]] && set -x

nxf_env() {
    echo '============= task environment ============='
    env | sort | sed "s/\(.*\)AWS\(.*\)=\(.\{6\}\).*/\1AWS\2=\3xxxxxxxxxxxxx/"
    echo '============= task output =================='
}

nxf_kill() {
    declare -a ALL_CHILD
    while read P PP;do
        ALL_CHILD[$PP]+=" $P"
    done < <(ps -e -o pid= -o ppid=)

    walk() {
        [[ $1 != $$ ]] && kill $1 2>/dev/null || true
        for i in ${ALL_CHILD[$1]:=}; do walk $i; done
    }

    walk $1
}

nxf_mktemp() {
    local base=${1:-/tmp}
    if [[ $(uname) = Darwin ]]; then mktemp -d $base/nxf.XXXXXXXXXX
    else TMPDIR="$base" mktemp -d -t nxf.XXXXXXXXXX
    fi
}

on_exit() {
  exit_status=${ret:=$?}
  printf $exit_status > /home/jgarrayo/nextflow_tutorial/nf_pipeline_trials/work/f5/1d84239f09ed35cfa10ef33a4df884/.exitcode
  set +u
  [[ "$tee1" ]] && kill $tee1 2>/dev/null
  [[ "$tee2" ]] && kill $tee2 2>/dev/null
  [[ "$ctmp" ]] && rm -rf $ctmp || true
  docker rm $NXF_BOXID &>/dev/null || true
  exit $exit_status
}

on_term() {
    set +e
    docker kill $NXF_BOXID
}

trap on_exit EXIT
trap on_term TERM INT USR1 USR2

export NXF_BOXID="nxf-$(dd bs=18 count=1 if=/dev/urandom 2>/dev/null | base64 | tr +/ 0A)"
NXF_SCRATCH=''
[[ $NXF_DEBUG > 0 ]] && nxf_env
touch /home/jgarrayo/nextflow_tutorial/nf_pipeline_trials/work/f5/1d84239f09ed35cfa10ef33a4df884/.command.begin
[[ $NXF_SCRATCH ]] && echo "nxf-scratch-dir $HOSTNAME:$NXF_SCRATCH" && cd $NXF_SCRATCH
# stage input files
rm -f abundance.h5
ln -s /home/jgarrayo/nextflow_tutorial/nf_pipeline_trials/work/8a/5872cdad5fe0327ad0f62b0921c63c/out/abundance.h5 abundance.h5

set +e
ctmp=$(set +u; nxf_mktemp /dev/shm 2>/dev/null || nxf_mktemp $TMPDIR)
cout=$ctmp/.command.out; mkfifo $cout
cerr=$ctmp/.command.err; mkfifo $cerr
tee .command.out < $cout &
tee1=$!
tee .command.err < $cerr >&2 &
tee2=$!
(
docker run -i -v /home/jgarrayo/nextflow_tutorial/nf_pipeline_trials/work:/home/jgarrayo/nextflow_tutorial/nf_pipeline_trials/work -v "$PWD":"$PWD" -w "$PWD" --entrypoint /bin/bash --name $NXF_BOXID insilicodb/kallisto:trial -c " /usr/bin/env Rscript /home/jgarrayo/nextflow_tutorial/nf_pipeline_trials/work/f5/1d84239f09ed35cfa10ef33a4df884/.command.sh"
) >$cout 2>$cerr &
pid=$!
wait $pid || ret=$?
wait $tee1 $tee2
